name: Go Release

on:
  push:
    tags:
      - 'v*.*.*'  # 触发工作流的标签格式，例如 v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build
          go mod tidy
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/myapp-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}-binary
          path: build/myapp-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-amd64-binary
          path: ./build/linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: darwin-amd64-binary
          path: ./build/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-amd64-binary
          path: ./build/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for ${{ github.ref }}.
          draft: false
          prerelease: false


      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/myapp-linux-amd64
          asset_name: myapp-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/macos/myapp-darwin-amd64
          asset_name: myapp-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows/myapp-windows-amd64
          asset_name: myapp-windows-amd64.exe
          asset_content_type: application/octet-stream